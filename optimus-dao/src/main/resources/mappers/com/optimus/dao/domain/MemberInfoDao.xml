<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.optimus.dao.mapper.MemberInfoDao">

  <resultMap id="BaseResultMap" type="com.optimus.dao.domain.MemberInfoDO">
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="MEMBER_ID" jdbcType="VARCHAR" property="memberId" />
    <result column="MEMBER_KEY" jdbcType="VARCHAR" property="memberKey" />
    <result column="MEMBER_TYPE" jdbcType="VARCHAR" property="memberType" />
    <result column="MEMBER_STATUS" jdbcType="VARCHAR" property="memberStatus" />
    <result column="SUP_DIRECT_MEMBER_ID" jdbcType="VARCHAR" property="supDirectMemberId" />
    <result column="ORGANIZE_ID" jdbcType="NUMERIC" property="organizeId" />
    <result column="DELETE_FLAG" jdbcType="VARCHAR" property="deleteFlag" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="MemberInfoChainResultMap" type="com.optimus.dao.result.MemberInfoChainResult">
    <result column="MEMBER_ID" jdbcType="VARCHAR" property="memberId" />
    <result column="MEMBER_TYPE" jdbcType="VARCHAR" property="memberType" />
    <result column="LEVEL" jdbcType="NUMERIC" property="level" />
  </resultMap>

  <sql id="Base_Column_List">
    ID, MEMBER_ID, MEMBER_KEY, MEMBER_TYPE, MEMBER_STATUS, SUP_DIRECT_MEMBER_ID, 
    ORGANIZE_ID, DELETE_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME
  </sql>

  <select id="getMemberInfoById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_MEMBER_INFO
    where ID = #{id,jdbcType=NUMERIC}
  </select>

  <select id="getMemberInfoByMemberId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_MEMBER_INFO
    where MEMBER_ID = #{memberId,jdbcType=VARCHAR}
  </select>

  <select id="listMemberInfoByMemberInfoQuerys" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_MEMBER_INFO
    where MEMBER_ID in
    <foreach collection="memberInfoQuery.memberIdList" item="item" open="(" close=")" separator=","> #{item,jdbcType=VARCHAR}
    </foreach>
    and MEMBER_STATUS = #{memberInfoQuery.memberStatus,jdbcType=VARCHAR}
    and DELETE_FLAG = #{memberInfoQuery.deleteFlag,jdbcType=VARCHAR}
  </select>

  <select id="listMemberInfoChains" parameterType="java.lang.String" resultMap="MemberInfoChainResultMap">
    with CTE_PARENT(MEMBER_ID, SUP_DIRECT_MEMBER_ID, MEMBER_TYPE, LEVEL)
    as (
      select MEMBER_ID, SUP_DIRECT_MEMBER_ID, MEMBER_TYPE, 0 as LEVEL
      from T_MEMBER_INFO
      where MEMBER_ID = #{memberId,jdbcType=VARCHAR}
      union all
      select l.MEMBER_ID, l.SUP_DIRECT_MEMBER_ID, l.MEMBER_TYPE, LEVEL + 1
      from T_MEMBER_INFO l
      inner join CTE_PARENT r
      on l.MEMBER_ID = r.SUP_DIRECT_MEMBER_ID
    )
    select MEMBER_ID, MEMBER_TYPE, LEVEL from CTE_PARENT
  </select>

  <insert id="addMemberInfo" parameterType="com.optimus.dao.domain.MemberInfoDO">
    insert into T_MEMBER_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="memberId != null">
        MEMBER_ID,
      </if>
      <if test="memberKey != null">
        MEMBER_KEY,
      </if>
      <if test="memberType != null">
        MEMBER_TYPE,
      </if>
      <if test="memberStatus != null">
        MEMBER_STATUS,
      </if>
      <if test="supDirectMemberId != null">
        SUP_DIRECT_MEMBER_ID,
      </if>
      <if test="organizeId != null">
        ORGANIZE_ID,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null"> #{id,jdbcType=NUMERIC},
      </if>
      <if test="memberId != null"> #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberKey != null"> #{memberKey,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null"> #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="memberStatus != null"> #{memberStatus,jdbcType=VARCHAR},
      </if>
      <if test="supDirectMemberId != null"> #{supDirectMemberId,jdbcType=VARCHAR},
      </if>
      <if test="organizeId != null"> #{organizeId,jdbcType=NUMERIC},
      </if>
      <if test="deleteFlag != null"> #{deleteFlag,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null"> #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null"> #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null"> #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null"> #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateMemberInfo" parameterType="com.optimus.dao.domain.MemberInfoDO">
    update T_MEMBER_INFO
    <set>
      <if test="memberId != null">
        MEMBER_ID = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberKey != null">
        MEMBER_KEY = #{memberKey,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null">
        MEMBER_TYPE = #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="memberStatus != null">
        MEMBER_STATUS = #{memberStatus,jdbcType=VARCHAR},
      </if>
      <if test="supDirectMemberId != null">
        SUP_DIRECT_MEMBER_ID = #{supDirectMemberId,jdbcType=VARCHAR},
      </if>
      <if test="organizeId != null">
        ORGANIZE_ID = #{organizeId,jdbcType=NUMERIC},
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG = #{deleteFlag,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>

</mapper>